/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TestDialog.java
 *
 * Created on Apr 19, 2010, 8:59:25 PM
 */

package danielknowlesprojectjava.components;

import danielknowlesprojectjava.geneticAlgorithm.GeneticEngine;

/**
 *
 * @author Lee
 */
public class OptionsDialog extends javax.swing.JDialog {

    /** Creates new form TestDialog */
    public OptionsDialog(EnvironmentFrame parent, boolean modal) {
        super(parent, modal);

        parentFrame = parent;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popSizeLabel = new javax.swing.JLabel();
        popSizeText = new javax.swing.JTextField();
        popLimitLabel = new javax.swing.JLabel();
        foodAmountLabel = new javax.swing.JLabel();
        foodAmountText = new javax.swing.JTextField();
        foodLimitLabel = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        crossoverLabel = new javax.swing.JLabel();
        mutationLabel = new javax.swing.JLabel();
        crossoverText = new javax.swing.JTextField();
        mutationText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Additional Options");
        setModal(true);

        popSizeLabel.setText("Population Size: ");

        popSizeText.setColumns(3);

        popLimitLabel.setForeground(new java.awt.Color(255, 0, 0));
        popLimitLabel.setText("Max is 500");

        foodAmountLabel.setText("Amount of Food: ");

        foodAmountText.setColumns(3);

        foodLimitLabel.setForeground(new java.awt.Color(255, 0, 0));
        foodLimitLabel.setText("Max is 500");

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));

        crossoverLabel.setText("Crossover Rate: ");

        mutationLabel.setText("Mutation Rate: ");

        crossoverText.setColumns(4);

        mutationText.setColumns(4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(errorLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(popSizeLabel)
                        .addGap(10, 10, 10)
                        .addComponent(popSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(popLimitLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(foodAmountLabel)
                            .addComponent(crossoverLabel)
                            .addComponent(mutationLabel)
                            .addComponent(okButton))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancelButton)
                            .addComponent(crossoverText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(foodAmountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(foodLimitLabel))
                            .addComponent(mutationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(errorLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(popSizeLabel)
                            .addComponent(popLimitLabel)
                            .addComponent(popSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(foodAmountLabel)
                            .addComponent(foodLimitLabel)
                            .addComponent(foodAmountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(crossoverText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(crossoverLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mutationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mutationLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(okButton)
                            .addComponent(cancelButton))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        popSizeText.setText(String.valueOf(Environment.getNumFeeders()));
        foodAmountText.setText(String.valueOf(Environment.getNumFoods()));
        crossoverText.setText(String.valueOf(GeneticEngine.getCrossoverProbability()));
        mutationText.setText(String.valueOf(GeneticEngine.getMutationProbability()));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void dispose() {
        parentFrame.getEnvironment().unPause();

        super.dispose();
    }

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        String errorMessage = "<html>";
        boolean error = false;
        int popSize = 0;
        int foodAmount = 0;

        try {
           popSize = Integer.parseInt(popSizeText.getText());

           if (popSize > Environment.MAX_FEEDERS) {
               error = true;
               errorMessage += "<p>The maximum population must not exceed " +
                       Environment.MAX_FEEDERS + ".</p>";
           }
        }
        catch (Exception ex) {
            error = true;
            errorMessage += "<p>Population Size must be an integer.</p>";
        }

        try {
            foodAmount = Integer.parseInt(foodAmountText.getText());

           if (foodAmount > Environment.MAX_FOOD) {
               error = true;
               errorMessage += "<p>The maximum food amount must not exceed " +
                       Environment.MAX_FOOD + ".</p>";
           }
        } catch (Exception ex) {
            error = true;
            errorMessage += "<p>Food Amount must be an integer.</p>";
        }


        errorMessage += "</html>";

        if (!error) {
            errorLabel.setText("");
            Environment.setNumFeeders(Integer.parseInt(popSizeText.getText()));
            Environment.setNumFoods(Integer.parseInt(foodAmountText.getText()));
            GeneticEngine.setCrossoverProbability(
                    Double.valueOf(crossoverText.getText()));
            GeneticEngine.setMutationProbability(
                    Double.valueOf(mutationText.getText()));

            parentFrame.getEnvironment().resetEnvironment();
           
            this.dispose();
        } else {
            errorLabel.setText(errorMessage);
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

//    /**
//    * @param args the command line arguments
//    */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                TestDialog dialog = new TestDialog(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel crossoverLabel;
    private javax.swing.JTextField crossoverText;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel foodAmountLabel;
    private javax.swing.JTextField foodAmountText;
    private javax.swing.JLabel foodLimitLabel;
    private javax.swing.JLabel mutationLabel;
    private javax.swing.JTextField mutationText;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel popLimitLabel;
    private javax.swing.JLabel popSizeLabel;
    private javax.swing.JTextField popSizeText;
    // End of variables declaration//GEN-END:variables
    private EnvironmentFrame parentFrame;
}
